{
  "version": 3,
  "sources": ["../../../../backend/index.ts"],
  "sourcesContent": ["import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\r\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\r\n\r\nconst s3Client = new S3Client({});\r\nconst BUCKET_NAME = process.env.BUCKET_NAME || \"your-bucket-name\";\r\n\r\nexport const handler = async (event: any) => {\r\n  console.log(\"event:\", JSON.stringify(event));\r\n  \r\n  try {\r\n\r\n    /**\r\n     * @param event AWS Lambda Proxy Integration \u306E\u30A4\u30D9\u30F3\u30C8\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\r\n     * @docs https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/nodejs-handler.html\r\n     */\r\n    const { method, path } = event.requestContext.http;\r\n    \r\n    // \u65E2\u5B58\u306Ehello\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\r\n    if (method === \"GET\" && path === \"/hello\") {\r\n      return {\r\n        statusCode: 200,\r\n        headers: { \r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\"\r\n        },\r\n        body: JSON.stringify({ message: \"hello from TypeScript\" }),\r\n      };\r\n    }\r\n    \r\n    // \u753B\u50CF\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u7528\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\r\n    if (method === \"POST\" && path === \"/upload\") {\r\n      try {\r\n        const body = JSON.parse(event.body || \"{}\");\r\n        const { fileName, fileType } = body;\r\n        \r\n        if (!fileName || !fileType) {\r\n          return {\r\n            statusCode: 400,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"Access-Control-Allow-Origin\": \"*\"\r\n            },\r\n            body: JSON.stringify({ error: \"fileName and fileType are required\" })\r\n          };\r\n        }\r\n        \r\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n        const key = `uploads/${timestamp}-${fileName}`;\r\n        \r\n        const command = new PutObjectCommand({\r\n          Bucket: BUCKET_NAME,\r\n          Key: key,\r\n          ContentType: fileType,\r\n        });\r\n        \r\n        const signedUrl = await getSignedUrl(s3Client, command, { expiresIn: 300 });\r\n        \r\n        return {\r\n          statusCode: 200,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          },\r\n          body: JSON.stringify({\r\n            uploadUrl: signedUrl,\r\n            key: key\r\n          })\r\n        };\r\n        \r\n      } catch (error) {\r\n        console.error(\"Upload error:\", error);\r\n        return {\r\n          statusCode: 500,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n          },\r\n          body: JSON.stringify({ error: \"Failed to generate upload URL\" })\r\n        };\r\n      }\r\n    }\r\n    \r\n    return {\r\n      statusCode: 404,\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify({ error: \"Not Found\" })\r\n    };\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    return {\r\n      statusCode: 500,\r\n      headers: { \r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify({ error: \"Internal server error\" })\r\n    };\r\n  }\r\n};"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA2C,8BAC3CC,EAA6B,yCAEvBC,EAAW,IAAI,WAAS,CAAC,CAAC,EAC1BC,EAAc,QAAQ,IAAI,aAAe,mBAElCL,EAAU,MAAOM,GAAe,CAC3C,QAAQ,IAAI,SAAU,KAAK,UAAUA,CAAK,CAAC,EAE3C,GAAI,CAMF,GAAM,CAAE,OAAAC,EAAQ,KAAAC,CAAK,EAAIF,EAAM,eAAe,KAG9C,GAAIC,IAAW,OAASC,IAAS,SAC/B,MAAO,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,QAAS,uBAAwB,CAAC,CAC3D,EAIF,GAAID,IAAW,QAAUC,IAAS,UAChC,GAAI,CACF,IAAMC,EAAO,KAAK,MAAMH,EAAM,MAAQ,IAAI,EACpC,CAAE,SAAAI,EAAU,SAAAC,CAAS,EAAIF,EAE/B,GAAI,CAACC,GAAY,CAACC,EAChB,MAAO,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,MAAO,oCAAqC,CAAC,CACtE,EAIF,IAAMC,EAAM,WADM,IAAI,KAAK,EAAE,YAAY,EAAE,QAAQ,QAAS,GAAG,CAC/B,IAAIF,CAAQ,GAEtCG,EAAU,IAAI,mBAAiB,CACnC,OAAQR,EACR,IAAKO,EACL,YAAaD,CACf,CAAC,EAEKG,EAAY,QAAM,gBAAaV,EAAUS,EAAS,CAAE,UAAW,GAAI,CAAC,EAE1E,MAAO,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CACnB,UAAWC,EACX,IAAKF,CACP,CAAC,CACH,CAEF,OAASG,EAAO,CACd,eAAQ,MAAM,gBAAiBA,CAAK,EAC7B,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,MAAO,+BAAgC,CAAC,CACjE,CACF,CAGF,MAAO,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,MAAO,WAAY,CAAC,CAC7C,CAEF,OAASA,EAAO,CACd,eAAQ,MAAM,SAAUA,CAAK,EACtB,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,MAAO,uBAAwB,CAAC,CACzD,CACF,CACF",
  "names": ["index_exports", "__export", "handler", "__toCommonJS", "import_client_s3", "import_s3_request_presigner", "s3Client", "BUCKET_NAME", "event", "method", "path", "body", "fileName", "fileType", "key", "command", "signedUrl", "error"]
}
