# バックエンドのビルドとAWSデプロイを自動化
# git push → ビルド → S3アップロード → CloudFormation → API完成
name: Deploy Backend

on:
  workflow_dispatch:  # 手動実行ボタン
  push:
    branches: [main, develop]  # mainまたはdevelopブランチにプッシュ時
    paths:
      - "backend/**"           # backendフォルダ変更時のみ
      - "infra/template.yaml"  # インフラ設定変更時
      - ".github/workflows/deploy.yml"  # このファイル変更時

env:
  AWS_REGION: ap-northeast-1  # 東京リージョン
  PROJECT_NAME: contact       # プロジェクト名（S3バケット名等に使用）

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # AWS OIDC認証に必要
      contents: read     # リポジトリ読み取り権限

    steps:
      # GitHubからソースコードをダウンロード
      - name: Checkout
        uses: actions/checkout@v4

      # Node.js 20をセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 依存関係をインストール
      - name: Install dependencies
        working-directory: backend
        run: npm ci

      # TypeScript → JavaScript コンパイル
      - name: Build
        working-directory: backend
        run: npm run build

      # Lambda用のZIPファイル作成
      - name: Create ZIP
        working-directory: backend
        run: |
          cd dist
          zip -r ../lambda.zip .

      # GitHub SecretsからAWS認証情報を取得してログイン
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # S3バケット作成（存在しなければ）+ ZIPアップロード
      - name: Upload to S3
        run: |
          BUCKET_NAME="${PROJECT_NAME}-artifacts-${{ github.repository_owner }}"
          aws s3api head-bucket --bucket $BUCKET_NAME 2>/dev/null || \
          aws s3 mb s3://$BUCKET_NAME --region $AWS_REGION
          
          S3_KEY="lambda/${GITHUB_REF_NAME}/${GITHUB_SHA:0:8}/lambda.zip"
          aws s3 cp backend/lambda.zip s3://$BUCKET_NAME/$S3_KEY
          echo "S3_KEY=$S3_KEY" >> $GITHUB_ENV
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

      # CloudFormationでLambda + API Gatewayを作成/更新
      - name: Deploy CloudFormation
        run: |
          STACK_NAME="${PROJECT_NAME}-${GITHUB_REF_NAME}"
          aws cloudformation deploy \
            --template-file infra/template.yaml \
            --stack-name $STACK_NAME \
            --parameter-overrides \
              ProjectName=$PROJECT_NAME \
              Stage=${GITHUB_REF_NAME} \
              CodeBucket=$BUCKET_NAME \
              CodeKey=$S3_KEY \
              AllowedOrigins="*" \
            --capabilities CAPABILITY_NAMED_IAM \
            --region $AWS_REGION

      # 完成したAPI URLを表示
      - name: Get API URL
        run: |
          STACK_NAME="${PROJECT_NAME}-${GITHUB_REF_NAME}"
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`SubmitEndpoint`].OutputValue' \
            --output text)
          echo "API URL: $API_URL"